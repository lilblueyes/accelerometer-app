import Head from "next/head";
import Image from "next/image";
import localFont from "next/font/local";
import styles from "@/styles/Home.module.css";
import { useState, useEffect } from "react";
import useAccelerometer from "../hooks/useAccelerometer";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});

const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export default function Home() {
  const { x, y, z } = useAccelerometer();
  const [permissionGranted, setPermissionGranted] = useState(false);

  const requestMotionPermission = async () => {
    if (typeof DeviceMotionEvent.requestPermission === "function") {
      try {
        const permission = await DeviceMotionEvent.requestPermission();
        if (permission === "granted") {
          setPermissionGranted(true);
        } else {
          console.log("Permission denied");
        }
      } catch (error) {
        console.error("Permission request error", error);
      }
    }
  };

  useEffect(() => {
    if (typeof DeviceMotionEvent.requestPermission === "function") {
      requestMotionPermission();
    }
  }, []);

  return (
    <>
      <Head>
        <title>Accéléromètre App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className={`${styles.page} ${geistSans.variable} ${geistMono.variable}`}
      >
        <main className={styles.main}>
          <Image
            className={styles.logo}
            src="https://nextjs.org/icons/next.svg"
            alt="Next.js logo"
            width={180}
            height={38}
            priority
          />

          {!permissionGranted && (
            <button
              onClick={requestMotionPermission}
              className={styles.primary}
            >
              Autoriser l'accès aux capteurs
            </button>
          )}

          {permissionGranted && (
            <div>
              <h1>Accéléromètre iPhone</h1>
              <p>Accélération X: {x ? x.toFixed(2) : "En attente..."}</p>
              <p>Accélération Y: {y ? y.toFixed(2) : "En attente..."}</p>
              <p>Accélération Z: {z ? z.toFixed(2) : "En attente..."}</p>
            </div>
          )}
        </main>
      </div>
    </>
  );
}
